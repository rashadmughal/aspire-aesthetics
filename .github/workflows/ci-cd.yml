name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint
      run: npm run lint
      
    - name: Build
      run: npm run build
      
    - name: Cache Next.js build
      uses: actions/cache@v3
      with:
        path: .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: next-build
        path: .next
        
  deploy:
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: next-build
        path: .next
        
    # Vercel Deployment (Recommended)
    - name: Deploy to Vercel
      if: false  # Disabled by default, enable when ready
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    # Docker Build and Push (Alternative)
    - name: Set up Docker Buildx
      if: false  # Disabled by default, enable when ready
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      if: false  # Disabled by default, enable when ready
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      if: false  # Disabled by default, enable when ready
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: yourusername/aspire-aesthetics:latest